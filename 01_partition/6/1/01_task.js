'use strict';
// Вычислить сумму чисел до данного
// важность: 5
// Напишите функцию sumTo(n), которая вычисляет сумму чисел 1 + 2 + ... + n.

// Например:

// sumTo(1) = 1
// sumTo(2) = 2 + 1 = 3
// sumTo(3) = 3 + 2 + 1 = 6
// sumTo(4) = 4 + 3 + 2 + 1 = 10
// ...
// sumTo(100) = 100 + 99 + ... + 2 + 1 = 5050

// Сделайте три варианта решения:
// 1. С использованием цикла.
// 2. Через рекурсию, т.к. sumTo(n) = n + sumTo(n-1) for n > 1.
// 3. С использованием формулы арифметической прогрессии.


// P.S. Какой вариант решения самый быстрый? Самый медленный? Почему?
// Ответ: самый быстрый вариант с помощью функции арифметической прогрессии,
// т.к. необходимо выполнить меньше всего математических действий

// P.P.S. Можно ли при помощи рекурсии посчитать sumTo(100000)?
// Ответ: вероятней всего будет превышен максимальный размер стека

// Решение циклом

function sumTo(n) {
    let res = 0;

    for (let i = 1; i <= n; i++) {
        res += i;
    }

    return res;
}

console.log( 'Решение циклом', sumTo(100) ); // 5050


// Решение рекурсией

function sumToRecursion(n) {
    return (n === 1) ? n : (n + sumToRecursion( n - 1 ));
}

console.log( 'Решение рекурсией', sumToRecursion(100) ); // 5050


// Решение формулой арифметической прогрессии

function sumToArithmeticProgression(n) {
    return ((1 + n) * n) / 2;
}

console.log( 'Решение арифметической прогрессией', sumToArithmeticProgression(100) ); // 5050